#define THRESHOLD_1 0.0
#define THRESHOLD_2 0.2
#define THRESHOLD_3 0.3
#define THRESHOLD_4 1.4
#define THRESHOLD_5 1.0

#define COLOR_1 vec3(86.0  / 255.0, 141.0 / 255.0, 169.0 / 255.0)
#define COLOR_2 vec3(116.0 / 255.0, 197.0 / 255.0, 238.0 / 255.0)
#define COLOR_3 vec3(179.0 / 255.0, 227.0 / 255.0, 252.0 / 255.0)
#define COLOR_4 vec3(192.0 / 179.0, 237.0 / 179.0, 252.0 / 255.0)
#define COLOR_5 vec3(238.0 / 244.0, 197.0 / 255.0, 247.0 / 255.0)


//void mixGradient(vec3 fromColor, vec3 toColor, float startValue, float endValue)
//{
//	if(startValue >= heightFactor || endValue <= heightFactor) return;
//
//	float mixBase = (heightFactor - startValue) / (endValue - startValue);
//	gl_FragColor = vec4(mix(fromColor, toColor, heightFactor), 1.0);
//}

//up is old code, it can be useful

varying float heightFactor;

uniform sampler2D surfaceTex;

void main()
{
	vec2 tPos = vec2(0.0, heightFactor);
  gl_FragColor = texture2D( surfaceTex, tPos);
}
